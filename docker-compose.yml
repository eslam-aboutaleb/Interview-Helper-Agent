services:
  db:
    image: postgres:15
    container_name: interview-prep-db
    environment:
      POSTGRES_DB: interview_prep
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  backend:
    build: ./backend
    container_name: interview-prep-backend
    environment:
      DATABASE_URL: postgresql://postgres:password@db:5432/interview_prep
      GEMINI_API_KEY: ${GEMINI_API_KEY}
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build: ./frontend
    container_name: interview-prep-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    environment:
      REACT_APP_API_URL: http://ec2-13-48-71-121.eu-north-1.compute.amazonaws.com:8000

volumes:
  postgres_data:
